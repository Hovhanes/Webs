1. intro
	1. mez nerkayacnel, kurseri npatak@ inchi khasnen kurseric heto, xia dzri kurser@, inch petqa anenq ardzyunqi hasnelu hamar
	2. incha cragravorum@, cragravorman lezun u inchi hmar 
	3. xi henc python, vortexa ogtagorcvum python@ u inch haytni ynkerutyunnerum
	4. inch tesaki lezua python@, interpretatori u compeliatori tarberutyun@ tipizacian incha 
	5. practic ashxatanq, install python tpel hello world, mi 2 ban sarqel pythonov titizanalu hamar
	6.bacatrenq vonc python kod@ grenq faileri mej u vonc run anenq mer arden modul@.
    		6.1 bacatrumenq input@ - input@ funkciaya vor mez hnaravorutyuna talis stanal tvyalner mer ogtateric.asenq vor erb kod@ hasnuma et inputin,
    	        heto user@ petqa inch vor ban gri u nor sharunaki kod@.

    		6.2 menq karanq useri grac tvyalner@ stananq mer input@ veragrelov popoxakani.

    		6.3 misht string enq stanum useric, u heto karanq asxatenq voncvor sovorokan stringeri het.orinak ete petq lini sarqenq integer.

    		6.4.uxaki orinak vonc stananq mer useri name@ u lastName u print anenq inch vor texti het.cuyt tanq vor karanq mer inputi label@ grenq nax
    		dranic araj print anelov,heto aveli harmar dzevov(iran parametr talov)



        											Tnayin
	1.install anel pythone@ (stugelu hamar petqa anenq `python -V`)
	2.sarqenq lesson_1 papka isk ira mej@ unenanq task1.py file
	3.faili mej print anen iranc anun azgannuner@
	4.print anen nerka tvakanic hanac iranc tariq@
	5.stex karanq asenq vortexic enq menq informacia stanum,mi qani link tanq kam tekuz menak w3schools.(chgitem arji videourok asenq nayen? xosqi barisov)u asenq vor google anen misht
	.karanq grqer xorhurd tanq ete haves unenan tox or@ mi qani ej kardan(prost@ documentacian mi qich chora grac im jogelov)

=================================================================================================================================================
								Types


2. Types
	1.popoxakanner, incha popoxakan@(tetev orinak urish lezuneri het tipizaciayi het kapvac)

		1.1 skzbum inch vor sovorakan orinak ` name="Hovlo"
		1.2 ka @ndunvac erku tesak popoxakan haytararelu hamar.arajin@ kochvuma CAMEL CASE (userName),isk erkrord@ SNAKE CASE (user_name).
		chpetqa grenq sax mecatar menak hatuk depqerum.stex uxaki mi qani barov kxosanq sra masin
		1.3 popoxakannerum chenq kara tanq annuner voronq pythonum unen hatuk nshanakutyunner `(True,False,if,else ...)
		1.4 python@ dinamik tipizacvac lezua,aysinqn mez petq chi naxoroq haytararel te inch type petq e iran veragrenq.(stex mi qani orinakner urish lezuneric)
			orinak erb menq grecink vor user="Hovlo" pyhton@ avtomat haskacav vor menq uzum enq string pahenq mer popoxakanum,nuyn@ karanq anenq urish type het.pyton@ dynamik bayc strong tipizacia uni,aysinqn chenq 
			kara stringin integer gumarenq vorovhetev python@ intuitiv chi haskana te inch petqa ani,isk pythoni grac kod@ misht nenca ashxatum vor ankaxateseli baner chlini. 
			orinak integer enq haytararum ` user_age=25(eqa txayes ay axper).
		1.5 cuyc tanq te vonc mi toxxov karanq mianqamic mi qani popoxakan haytararenq
			orinak x,y = '5',5
			x,*y = '5',5, 9 (es chgitem arji te che)

    2.(String,Integer,Float,List,Tuple,Dict,Set(frozenset),File,Bool) - slide `popoxvox u chpopoxvox https://medium.com/@meghamohan/mutable-and-immutable-side-of-python-c2145cf72747
        2.1 tetev kgrenq mi qani orinakner stringic u integeric.(str u int funkcianer)

		                                                    Tnayin

    1. @ndhanur mi qani harcer
    			1.1 inch data typer kan pythonum.
                1.2 unenan first_name popxakan u tan iranc anun@,heto unenen last name u tanc iranc azganun@.petqa stananq full_name popoxakan@
                et erku popoxakanner@ irar miacnelov(aranqum lini space)
                1.3 full namein avelacnel age u noric tpel
    			1.4 X = ‘spam’
    				Y = ‘eggs’
                pythoni gorciqneri mijocov inchpes poxel erku popoxakanner@ texerov aranc errord@ haytararelu
***************************************************************************************************************************************************************************
	1.(String,Integer,Float) - intro (orinakner vor popxakaner@ poxvum en gorcoxutyunneric heto u pahvum en referance-i mijocov)
		1.0. referanci orinak
			x = 1
			y = x
			x = 7
			print(y)
		1.1 String pahelu hamar menq petqa @ndamen@ mer uzac arjeq@ grenq kam 1 kam 2 hatanoc chakertneri mej, vor interpretator@ haskana vor popoxakan chi.
		1.2 karanq arden print anenq sax u iranqel gren mer het.(stringer@ irar miacnelu orinaker)
		1.3 ete uzum enq toxadarc ogdagorcenq petqa text@ vercnenq 3 hat chakerti mej(eakan chi 1 te 2)
		1.4 string format.  orinak name = "Hovlo"            kam orinak senc print(f."Hello,{name}")(3.6 ic heto menak)
							print("Hello, {}".format(name))

			print("%s %d tarekana" % ('Hovlon',25.444) )
			
			%s - string
			
			%d - int(decimal - float@ kloracnuma)
			
		1.5 nuyn@ karanq asenq Integeri u Floiati hamar(Floati hamar mi qich aranzin kxosanq).meke mi qani orinakner (gumarum,hanum,random,meci u poqri nshanner u tenc inch hishenq)
	2.default funkcianeri orinakner (String,Integer,Float) hamar arandz bacatrelu te inch en u urduc(kasenq gorciqner kan senc)
		4.1 String  - 
					  str(55) - funkcian.
					  'string'.lower () mer tvac text@ sax sarcuma poqratar.
					  'string'.upper () mer tvac text@ sax sarquma mecatar.
					  'string'.replace('replaced_string','new_string',count_of_replaced_string) poxuma mer textum exac bar@(kam symbol@) mer uzacov.
					  'string#number#two'.split('separator') mer tvac text@ bajanuma @st mer tvac symboli u veradarcnuma list(stex tetev asac klinenq listeri masin)
					  'string'.find('r') ete gtnuma veradarcnuma mer uzac texti index@,isk ete chi gtnum veradarcnuma -1
	    2.2 Integer -
					  x + y
					  x - y
					  x / y
					  x * y
					  x // y kloracnuma depi nerqev
					  x ** y
					  -x sarquma bacasakan
					  +x sarquma drakan
					  Int('5') - funkcian
					  <,>, == # stex kasenq vor veradarcnuma chista te sxal True kam False - i mijocov
					  
	    2.3 Boolean
	        linuma @ndamen@ erku tesak True u False.iranq  havasar en 1 - i u 0 - i u et aravaca uxaki nra hamar vor haskanali lini

					  HISHENQ VOR CUYC TANQ STRINGI BAZMAPATKUM@

					  
	    2.4 Float - sra masin indz tvuma shat ban chkael xosalu prost@ mi qani orinak karanq cuyc tanq.
					#uxaki integer@ sarquma float
					print(float(10))

					# type@ mnuma eli float
					print(float(11.22))

					# string@ poxuma floata sarqum
					print(float("-13.33"))

					# spacer@ hasvi chen arnvum
					print(float("     -24.45\n"))

					# errora tali ete sxal parametr enq tali
					print(float("abc"))

					#float@ vor bajanum es integeri floata misht veradarcnum
					print(10.2 / 2)
	    2.5 round(5.6, digits) tetev nerkayacnenq
		

	3.Integeri,stringi u floati default funkcianer@ cuyc tal orinaknerov te vortex en petq
		3.1 es indz tvuma arden arecinq
	4.berel orinak type() funkciayov
		4.1 String - type('55string')
					 type(str(1))
			Integer - type(1)
					  type(int('22'))
		    
			Float - type(55.77)
					type(float(22))
					type(float('22'))
					
																Tnayin

		1.String
			1.1 uneneq mi hat popoxakan

			    text = "some text"

			    print anen `text`-@  + 'changed'-in, @nenc vor arajin popoxakan@ chpoxvi

            1.2 unenanq mi hat popoxakan

                text = "some text"

                `text`-in gumarenq 'changed' aynpes vor `text`-@ tpeluc uotput stananq "some text changed"
			
			1.3 unenq erku baric kazmvac text `orinak "Hello world".petqa ogtagorcelov stringi methodner@ stananq texti hakarak dzev@ "world Hello"
			
			1.4 entadrenq unenq mi hat senc text
			    s1 = 'Lorem Ipsum is  ...  dummy text of the printing and typesetting industry.
			        Lorem Ipsum has been the industry's standard dummy text ever since the ...s,
			        when an unknown printer took a ...  of type and scrambled it to make a type
			        specimen book'.
			    https://www.lipsum.com/ gnaceq ays hxumov u arajin textic ogtvelov lracreq bac toxnvac barer@ ogtagorcelov format() method@
				
	    2.Integer u Float
			2.1 unenq hetevyal artahaytutyun@
				    2 * 3 + 4
                vonc karanq dzevapoxenq artahaytutyun@ vor skzbum ani gumarum@ heto bazmapatkum@

			2.2 inch type kveradacni hetevyal artahaytutyun@ u xi
				1 + 2.0 +3

			3.3 vonc karanq kloracnenq hetevyal tiv@ 2.5 vor stananq 3
			
			4.4 unenq sovorakan tiv `orinak 97.petqa tpenq arandiz 7@ heto 9@ ogtagorcelov matematikakan operatorner
			
			5.5 unenq sovorakan tiv `orinak 123.petqa tpenq bolor tveri gumar@ u stananq 6
					
************************************************************************************************************************************************************
3.List u Tuple
	2.uzum enq grenq app vor kazmuma ashakertneri annunner@.
		2.1 skzbum cuyc ktanq dranq talov popxakannertin,heto nuyn@ bacatrelu enq vor aveli hesta listov u senc iravichaknerum aveli haramara list ogtagorcel.
			x = 'Hovo'     users_list = ['Hovo', 'Vazgen', 'Jarviz']
			y = 'Vazgen'
			z = 'Jarviz'
			listum karanq unenq tarber typeri valuner(orinak String,Integer, listi mej list ...)
		2.2 bacatrenq listum indexsavorum@, vor sksuma 0 ic, u vor index@ vonc karanq tpenq.
    	     orinak berenq te vonc karanq listi index@ stanalov iran urish tvyal veragrenq - users_list[0] = 'Tatul'
			slice -  users_list[0:2] - 'Hovo', 'Vazgen'
		      users_list[0:]
		      users_list[-1]
		      users_list[:]  - copy
		      users_list[::-1] - reverce
		      users_list[::1]
         
		2.3 operatorner 
			erku listeri irar gumarum@ users_list + ['25','35','&']
			list@ karas bazmapatkes -  users_list * 3
							 
		2.4 list mutable
					list@ hamarvuma popoxvox type, aysinqn 
						orinak ` x = [1, 2, 3]
									y = x
									hima ete x[0] = 100, u tpenq y apa ktesnenq vor ira mejnela poxvel arjeq@

		2.5 methodner
			append() - entadrenq mer mot nor ashakerta eke, uzumenq avelacnenq  iran mer mot. dra hamar ogtagorcum enq apend methodov vor@ misht mer listi verjuma avelacnum.
			pop() - kam orinak ete uzum enq pakasacnenq mer verjin ekac userin ogtagorcum enq pop, vor@ jnjuma listi verji arjeq@ u veradarcnum ayn.
			insert( 1, ''user') - ete uzum enq konkret indexov avelacnenq.
			remove('value') - jnjum enq @st mer value - i
			reverce() - kstananq mer list@ hakarak uxxutyamb
			sort(reverse=True) - sortavorel list@ @st achman, isk ete reverse havasara True @st nvazman

		2.6 funkcianer
			sum() - @ndunuma iteracion obyekt@ u veradarcnuma iranc gumar@
			copy()
			len()
			sorted() - chi poxum list@ ayl veradarcnuma nor@, veradarcnuma nor@

		
	3.tuple - asenq te inchna listi u tupli tarberutyunner@,berenq orinakner te te vonc karanq default funkcianerov(list(),tuple()) mi type poxenq miusov
		3.1 listi meji value - n karanq poxenq, isk tuplin@ che.
		3.2 tupl@ karanq ogdagorcenq en depqum ete mez petqa hamozvac linenq vor hetagayum sxalmamb chenq karox poxel ayn.
		
																	Tnayin
		1.List
			
			1.1 unenq list(users_list = ['Hovo', 'Vazgen', 'Jarviz']).

			tpel listi blor arjeqner@
			
			1.2 unenq senc erku hat list
					x = [1,2,3,4,5,6]
					z = [7,8,9,10,11]
				peta imananq iranc @ndhanur erkarutyun@
			
			1.3 nsheq 4 methodner voronq anmijapes poxum en listi obyekt@

            1.4 unenanq userneri list users_list = ['Hovo', 'Vazgen', 'Jarviz'].
                vonc karanq 1-in indexum gtnvox anun@ poxenq cankacac ayl anunov

			1.5 stexcel python file first_input.py anunov.mej@ unenanq 2 input.arajin@ unena senc `nsheq dzer uzac bareri qanak@` label u vor@
				knduni Integer typov arjeq.erkrord input@ unena senc 'nsheq bar@ kam text@ vor@ uzum eq bazmapatkel'.ardyunqum stananq mer nshac bar@ kam text@
				aynqan angam vorqan vor nshel enq arajin inputum
			
			1.6 stexcel python file users.py anunov vori mej klini input senc 'avelacnel nor user?' labelov.amen angam user avelacnelov ardynq@ peta lini senc
			'dzer verjin avelacrac useri annun e `useri anun@`'
			'mer avelacrac usernern en ['user1','user2'......]'
			
			1.7 stexcel python file delete_users.py vori mej lini input senc 'dzer usernern en [users_list]` um eq cankanum jnjel?'.user@ petqa gri ira
				uzac userin voric heto peta jnjenq et userin mer listic u senc text cuyc tanq 
				'duq jnjel eq `jnjvac useri anun@ MECATAR`-in'
				'userner@ voronq mnacel en'.
				tetev hushum(amen angam fil@ run aneluc menq karananq jnjenq @ndamen@ mek useri)

		2.Tuple
			
			2.1 unenq senc tuple days = ('Erk','Ereq','Choreq','Hing','Urb',['Shb']). vonc karanq avelacnenq 'kiraki' 'Shb' - i het nuyn listum .
			2.2 porcel anel naxord tnayini 1.6-rd varjutyun@ ,bayc listi poxaren unenanq tuple

		    @ndhanur hushumner(hishenq vor default funkcianerov menq karanq inch vor mi type poxarinenq miusi)

**************************************************************************************************************************************************************************

4.Dict u Set(frozenset)
	1.unenq xndir vor mer amen mi ashakerti hamar petqa lracnenq iranc tvyalner@(skzbum kasenq tox iranq mtacen,heto nor kbacatrenq).
		1.1 arden mer ancac typerov vonc et xndir@ lucenq ?  orinak karanq unenanq listum useri tvyalner@ ['"jorj","bush", "57"]. stex nax mez metqa angir hishenq te mer useri konkret vor tvyal@ vor indexova pahac.
			isk inch klini ete orinak user@ shat tvyalner unena? dra hamar mez aveli harmar klini unenal Dictionery.
		1.2 Dict@ haytararelu hamar menq karanq skzbi hamar anenq da dict() funkciayov.orinak x = dict() kam  x = {}

        1.3 stex karanq henc dict@ hayatrarelu jamanak grenq ira valuener@ x = {'name' : 'jorj','lastname':'bush','age':57}
		    kam skzbum hayatrarenq datark dict@ u heto avelacnenq dra mej.orinak x["name"] = "jorj".ete uzenanq update anenq mer tvyal@ karanq uxaki grenq x["name"] = "valod".
		    heto ete uzenanq print anenq mez @ndamen@ petqa asenq print(x["name"]) kam ete uzum enq avelacnenq uxaki grum enq mer nor key@ x["country"] = 'USA'

        1.4 Dict@ i tarberutyun listi chuni fixvac hertakanutyun, kara amen angam tarber hertakanutyamp tpi u dra hamar petq chi huys dnel hertakanutyan vra.

        1.5 Dict@ mutable type-a
            orinak x = {"name" : "jorj"}
                   y = x
                   x["name"] = 'valod'

                   stex mer y nuynpes kpoxi ira arjeq@
        1.6 metodner
          get() - hishumenq vor karanq sovorakan qarakusi pakagcerov vekalenq, bayc dra poxaren ka aveli kayf dzev vekalelu mer valuen, et get() methodna,
                    vorin talis enq mer key@, vor@ chgtnelu jamanak mez veradarcnum a None ayl voch te error.menq karanq nayev tanq iran mer deafaul value-n u erb vor
                    chgtni mer key-@ uremn return kani iran

          pop() - jnjuma @st keyi ur veradarcnum iran

          keys() - veradarcnuma mer dicti keyer@ listum

          values() - veradarcnuma mer dicti valuner@ listum

          items() - veradarcnuma list vori mej mer key:valuner@ pahvum en arandzin tuplneri mej

          update() - erku dict irar miacnelu hamar petqa uxaki 1 in dictic haytararel update() method@ iran vorpes parametr talov erkrord dict@

          1.7 listi u dicti hamadrutyun
               voncvor listum ,menq karanaq mer dictum pahenq tarber typer.bayc aveli hachax kirarvox depqerum menq unenum enq lister vorum pahum enq dicter
               vorovhetev tenc mez aveli harmara linum ashxatel
               orinak users_list[{'name':'jorj','age':23},{'name':'james','age':45}].
               es depqum mer listi 0 index-i name@ stanalu hamar karanq senc anenq users_list[0]['name']

	2.nerkayacnenq incha set@.
	    2.1 set@ dicti nmana uxaki nra mej valuner@ chen pahvum @ keyeri, u nra mej exac valuner@ misht unique en. ira arandznahatkutyunneric mek@ ena vor shat araga
	    get anum ira valuener@.shat nmana matematikakan hamaxumb/bazmutyn@ u karanq gtnenq dranc hatum@ miavorum@.
	        orinak senc set karanq unenanq x = {1,2,"hello"},ete stex avelacnenq verjum es valuneric inch vor mekic meka inq@ et value-n chi avelanalu
        2.2 methodner(sax orinakner@ cutc enq talu KLOR orinaknerov)

            union() - erku seter@ irara miacnum u jnjuma krknvox arjeqner@

            difference() - cuyca tali te vor andamner@ arajinum kan isk erkrordum che

            intersection() - cuyca talis en andamner@ voronq 2 texum kan

            add() - avelacnuma item set-um

            remove() - jnjuma item-@ setic

    3.frozenset@ nuyn setna uxaki popoxeli chi u mej@ ban avelacnel u jnjel chi linum
    
	4.verjum random funkciayov k@ntrenq mi hogu u hajord dasin inq@ petqa bacatri ira tnayinner@ bolorin.
	5. orinak cuyc tanq vor unique list stanalu hamar karox enq sarqel set heto noric list
	
	
																		Tnayin
																		
	1 Dict
		1.1 unenq orinak senc dict
			x = {
				'name':'Jarviz',
				'age' : '100',
				'professions':['robot', 'dancer']
			}
			
			greq vonc karanq tpenq `robot`-@,u poxenq `dancer`-@
		
		
		1.2 unenq orinak senc dict
			prices = {
				"banana": 4,
				"apple": 2,
				"orange": 1.5,
				"pear": 3
			}
			
			1.hashvel bolor mrgeri gumar@.
			2.avelacnel dzer sirac mirg@ u inchqan eq iran gnahatum
			
			
		1.3	unenq erku set
			x = {1,2,4,5,87,548}
			z = {6,11,55,4,5,343}	
			
			1.gtnel ayn tver@ voronq kan erku setum
			2.gtnel ayn tver@ vortex z - um kan bayc chkan x - um
			
		1.4 unenq erku dict

		markets = [market1,market2]
			market1 = {                                       
				"name": "Hovoi mot",
				"capital":{
					'1-n amis': 50 
					'2-rd amis': 32
					'3-rd amis': 124
				},
				"apranqneri_mnacord":['dzmeruk','apelsin','lvacqi meqena','adi budi','marojni']
			}
			
			market2 = {
				"name": "Hovoi @ngeroj mot",
				"capital":{
					'1-n amis': 33 
					'2-n amis': 56 
					'3-n amis': 87 
				},
				"apranqneri_mnacord":['mandarin','adi budi','marojni','dzmeruk','apelsin']
			}

			petqa stananq es erku dicteri hamar
				1.marketi anun@
				2.marketi @ndanur capital@
				3.inch apranqner kan 1-in xanutum vor chkan erkrordum.
				4.inch @ndhanur apranqner unen pahestum
			
		1.5 stexcel python file vori users.py anunov.unenanq arajin@ input senc venagrov 'inch apranq eq uzum gtnel'.ogtvelov mer naxord tnayini `errord marketic` cuyc tal 
			'pahestum ka tvyal apranq@' ete useri grac apranq@ ka mer errort marketi pahestum.isk ete chgtni cuyc tanq senc 'apranq@ bacakayum e' text@
			
		

********************************************************************************************************************************************************************************
5.File
	1.asenq vor pythonum faileri het ashxatum enq vonc vorpes obyektneri het(vonc vor mnacac typeri het).
	2.
		2.1 arajin parametrov talis enq te vortexa gtnvum file-@ (file-i path@)
		2.2 file-i het karanq tarber gorcoxutyunner anenq, orinak kardanq, grenq kam exac file-i mej nor baner avelacnenq
		2.3 'r' - read uxxaki bacum enq fail@ kardalu hamar (default)(ete fail@ chka,exceptiona talis)

			"a" - append - bacum enq fail@ nra mej ban avelacnelu hamar,aysinqn menq arden exac texti verjic sksac arden karanq avelacnenq(ete fail@ chka stexcuma nor fail)
			
			"w" - write - eli bacum enq fail@ nra mej ban avelacnelu hamar,bayc amen angam menq jnjum enq failum exac text@ u avelacnum e miayn mer verjin text@(ete fail@ chka stexcuma nor fail)
			
			"x" - create - stexcel nor file (ete fail@ ka exceptiona tali)
			
			stex "t" u "b" parametrer kan bayc chem uzum dran vra xorananq."t" default sovorakan text veradarcnelu hamara isk "b" byte koda veradarcnum aran decode anelu.

        2.4 fail@ baceluc heto petqa misht paqenq iran close methodov

	3.parameter@ nerkayacneluc heto cuyc tanq sovorakan operacianer faileri het ashxatelu hamar(kardal faili mej exac text@,nor text grel faileri mej,stexcel failer,....).
        3.1 kardalu methodner
            read() - veradarcnuma fail@ amboxjutyamb vorpes string

            readlines() - veradarcnuma faili bolor toxer@ listov

            readline() - veradarcnuma amen mi tox@ stringov
        3.2 grelu methodner
            write() - ete bacaca `w` parametrov jnjuma sax text@ u norna avelacnum,isk ete `a` avelacnuma faili verjum

            writelines() - karanq avelacnenq listov nor tox
	4.karanq tetev asenq `with` instrukciayi masin,faileri het ashxatelu hamar.

        4.1 qani vor karanq iravichakner unenanq vor fail@ kardalu jamanak error lini u fail@ chascni paki, dra hamar  failer@ karanq bacenq nayev
           `with` - i mijocov, vor@ avtomat close kani mer fail@, voric heto karanq iran miangamic veragrenq popoxakani mek instrukciayov.
            orinak with open('file.txt','r') as file:
                        pront(file.read())
             stex tetev bacatrenq bloki gaxapar@ vorov voroshvuma kod@ bloki meja mtnum te che
     *.? inputov mi qani orinak cuyc tanq

																		Stayin
     1.File
		1.1 inch rejimov a ashxatum open() funkcian default-ov
		
		1.2 dzer barerov karaq bacatreq te fail@ bacelu hamar inch rejimner kan u inchi hamar en naxatesvac
	 
		1.3 unenanq shat failer u inputi mijocov, harcnenq vor fail@ petqa baci.erb vor user@ kgri faili anun@ petqa uxaki print anenq mer fail mej exac text@

		1.4 unenq users_list = [
		            {
		                'first_name': 'Jorj',
		                'last_name' : 'Bush',
		                'age':55
		            },

		            {
                        'first_name': 'James',
                        'last_name' : 'Bond',
                        'age':100
                    }
		    ]

		   petqa nax avelacnel mer amen mi useri hamar mi nor tvyal (key:value), heto avelacnel nor user mer listin u failum tpen mer useri tvyalner@
		   hetevyal formatov
		   uaer 1: first_name = Gago, last_name = vardanyan,

==================================================================================================================================================
        	            							Expressions


6.(if ,else, elif,) - orinak karanq mi toxov grneq karch linelu depqum
	1. if
		1.1 karanq skzbum bacatrenq blokneri syntax@
		1.2 verhisenq inch boolean type.
		1.3 if operator mej petqa veradarcnenq true, kam voch null arjeq unecox artahaytutyun.
		ete hajordakanutyan erkarutyun@ mec e 0-ic uremn nuynpes mtnuma if operatori mej
			
			orinak`
				a = 33
				b = 200
				if b > a:
					print("b mec e a-ic")
    2. if-@ if-i mej
        2.1 karanq unenanq inchqan uzenanq if urish if-i mej.karevor paymana menak vor syntaxi kanonner@ pahenq
			orinak`
			a = 33
			b = 200
			c = 200
			if c == b:
				print("c havasar e b")
				if c > a:
					print("c mec e a-ic")
    3. else
        3.1 else - hamarvuma if statment-i sharunakutyun@ u chi hamarvum partadir(ogtagorcvuma voch miayn if-i het).
		3.2 else bloki kod@ mej mtnuma erb vor if-@ veradarcnuma false.
		orinak`
				a = 33
				b = 200
				if b > a:
					print("b mec e a-ic")
				else:
					print("c mec e b-ic")
					
				print("stex amen depqum linelua")
				print("stex amen depqum linelua")
    4. elif
        4.1 elif - nuynpes if statment-i sharunakutyuna, hamavuma voch partadir bayc ogtagorcvuma miayn if-ic heto
		4.2 elif@ ogtagorcvuma urish payman talu hamar, u karanq unenanq aynqan elif vorqan vor mer paymannern en
		orinak`
			a = 200
			b = 33
			if b > a:
			  print("b mece a-c")
			elif a == b:
			  print("a ev b havasar en")
			else:
			  print("a mece b-c")
    5. and or operatorner@
        5.1 if kam eliv operatorneri nersum petqa uneanan aynpisi artahaytutyun vor veradarcni true. menq karanq mi qani payman grenq 
			if-i mej ogtagorcelov and ev or operatorner@
		5. and ev or logicheski operatorner@ ogtagorcvum en mi qani operatorner miacnelu hamar
			1 - and operatoro@ ogtagorcelov petqe mer erku kam avel artahaytutyunnr@ misht veradarcnen true
				orinak`
				a = 200
				b = 33
				c = 500
				if a > b and c > a:
				  print("erku paymannernel chisht en")
			2 - or operator@ gtagorcelov petqe mer gone mek payman@ veradarcni true 
				orinak`
				a = 200
				b = 33
				c = 500
				if a > b or a > c:
				  print("chist e mer erkrord tvac payman@")
				  
	6.chgitem stex arji scope-eric xosanq?
		x = 41
		if x > 10:
		  print("mece 10-ic")
		  if x > 20:
			print("ev mece 20-ic")
		  else:
			print("bayc mec che 20-ic.")  
		else:
			print(poqr e 10-ic)
		
	7.switch case
		7.ape bayc voncvor chka es mek@.senc ban karanq orinak cuyc tanq(stackoverflow-ic em gtel)
			unit_to_multiplier = {
				'mm': 10**-3,
				'cm': 10**-2,
				'dm': 10**-1,
				'm': 1,
				'km': 10**3
			}.get('km', 0)

7.Ciklner - while u for (karch for)
    1. while, break, continue, else
		1.1 mi qich xosanq incha vabse cikl@.
			Hamarya bolor cragravorman lezuner@ unen ciklner u grete bolor lezunerum dranq mekic shat en.Pythonum ka @ndhamen@ 
			erku tesaki cikl ` while u for. Mer praktikayum aveli hachax handipum en for arahaytutyunov ciklner. Ciklner@ @ndhanrapes 
			petq en erb vor menq uzum enq inch vor ban anel in vor `n` qanakutyamb. Mer arajin orinak@ cuyc ktanq while-ic.
			orinak `
					i = 0
					while i < 10:
						print(i)
						i = i + 1
			aystex mer cikl@ ksharunakvi aynqan jamanak minchev mer while artahaytutyun@ veradarcnum e true;
			orinak ete men unenainq senc artahaytutyun
					
					while true:
						print('compt varia gnalu')
					
					mer cikl@ ksharunakver anverj, aysinqn aynqan minchev mer hishoxutyun@ chprcner
					
		1.2 
			1.2.1 range()
			nax @stex canotananq mi hat urish python-i funckiayi het vor kochvuma range.
			range(start, stop, step) funkcian @ndunuma 3 parametr. ete orinak kanchenq range funkcian mek parametrov 
			
			orinak`	range(5) uxaki mer start@ default kstana 0 u ksarqi 0-ic mincev 5 hajordakanutyun
			
			isk mer errord parametrov karox enq tal te qani tiv petq e bac toxni hajordic tvic mer hajordakanutyan mej
			
			1.2.2 for
			vonc arden nshecinq for cikl@ praktikayum amenashat handipox ciklna
			i tarberutyun while for artahaytutyun@ @ndunuma hajordakanutyan
			(et kara lini list,dict,string, range() funckiayov veradarcrac range object)
			u ashxatuma et hajordakanutyan lengthi qanakov
			
			orinak `
			for number in range(5):
				print(number)
				
			es depqum uxaki mer cikl@ ktpi 0-ic minche 5 tver@, vorovhetev range() funckian mez veradarcrel e 0-5
			tverov hajordakanutyunov object. number@ et mer tvac opxakani anunna uxaki vor@ vor for artahaytutyun@ ogtagoruma
			amen mi hajordakanutyan value-i hamar.
			
			ornak karanq range()-i ppoxaren tanq  list
			
			list = [1,2,3,4,'hing']
			
			for x in list:
				print(x)

			print kani  1
						2
						3
						4
						hing
		1.3 break
			
			handipelov break operatorin cikl@ dadaruna ira gorcoxutyun@ u koc@ sharunakvua cikli blokic durs.
			
			orinak`
			l1 = [1,2,3,4,'hing']
			
			for x in l1:
				if x == 4
					break
				print(x)
			
			print kani  1
						2
						3
						
		1.4 continue
			
			handipelov continue operatorin cikl@ uxaki chi sharunaku kod@ ev ancnuma hojordin

			orinak`
			list = [1,2,3,4,'hing']
			
			for x in list:
				
				if x == 2
					continue
				print(x)
			
			print kani  1
						3
						4
						'hing'

		1.5 else
			
			else arahaytutyun@ karox e iinel for-i sharunakutyun@ ev hamaravuma voch partadir
			
			orinak `
			
			for x in 'hello world':
				if x == 'a'
					break
				print(x)
			else:
				print('a tar@ goyutyun chuni')
				
			else artahaytutyun@ kashxati menak en depqum er vor mer cikl@ avartuma ira ashxatanq@ aranc break operatori
				
    
    2. for in for
		
	   2.1 menq karanq grenq cankacac kod mer for bloki mej orinak mi hat urish for.

		orinak`

			adj = ["red", "big", "tasty"]
			fruits = ["apple", "banana", "cherry"]

			for x in adj:
			  for y in fruits:
				print(x, y) 	   
			
			print kani  red apple
						red banana
						red cherry
						big apple
						big banana
						big cherry
						tasty apple
						tasty banana
						tasty cherry 
		
	 
		
    3. for on dictionary
		
		inchpes arden gitenq dictionary nuynpes hamarvuma hajordakanutyun u mez vochmi ban chi xanarum iran ogtagorcenq me cikli mej
		
		orinak
		
		user = {
				'name': 'Hovlo',
				'age': '26',
				'proffesion': 'mec axper'
			}
		
		for x in user:
			print(x)
		
		print kani `
					name
					age
					proffesion
		
		aysinq ete menq uxaki dicti vrayov enq cikl frum mez veradarcnuma ira keyer@.bayc menq karanq mianqamic ira valuneri vrayov cikl franq
			orinak`
				for x in user.values():
					print(x)
					
				print kani `
							Hovlo
							26
							mec axper
	
		isk ete menq uzum enq stananq mianqamic ham key-@ ham value-n karanq ogvenq mer dicti .items() methodic vor@ mez kveradacni 
		list vori valuner@ klinen amen mi key-value arandzin tupli mej
			

			orinak ` 
				print(users.items())
				
				>>> dict_items([('name', 'Hovlo'), ('age', '26'), ('proffesion', 'mec axper')])

				for x,y in user.items():
					print(x+':'y)
		
				print kani `
							name:Hovlo
							age:26
							proffesion:mec axper
		
		ushadrutyun darcreq mer for arahaytutyan mej x-ic baci menq tvel enq erkrord y popxakan@ vorin 
		python@ avtomat knsahnaki mer dicti valuen, isk x klini key@ 
	
	4.enumerate() funkcia ?
		ete mez petqa orinak mer listi amen mi value-i het stananq hame ira index@ menq karanq ogtvenq enumerate() funkciayic
		vor arajin parametrov @ndunuma hajordakanutyun@
		orinak `
			
			l1 = [1,2,3,4]
			
			for value,index in enumerate(l1):
				print(value,index)
				
			print kani  0 1
						1 2
						2 3
						3 4
	
		BAYC ES UXKI ORINAKA VONC KARANQ OGTAGORCENQ ES FUNCIAN FOR-I MEJ
	
    5. one line for
        5.1 doubled = [thing for num in lst] # simple
			ete mez petqa katarel hasarak gorcoxutyun for-i het, es depqeri hamar python@ dra hamar uni aveli karch u haskanali dzev
			
				orinak`
					l1 = [1,2,3,4]
					
					l2 = [number for number in l1]

					print(l2)

					>>> [1, 2, 3, 4]
					
				
        5.2 doubled = [num * 2 for num in lst] # with operation
			
			menq karanq anenq inch vor gorcoxutyn mer ameni mi value-i hamar uxaki dnelov ayn artahaytutyan skzbum
			
				orinak`
				
					l1 = [1,2,3,4]
					
					l2 = [number * 2 for number in l1] // miangamic veragrum enq popoxakani

					print(l2)
					
					>>>[2, 4, 6, 8] 
			
        5.3 [word for word in lst if len(word) > 5] # with if
		
			ete petqa menq katarenq gorcoxutyun inch vor casum mer value-neri het et depqum karanq uxaki artahaytutyan verjum avelacnenq mer uzac 
			artahaytutyun@
				orinak`
			
					l1 = [1,2,3,4]
					
					l2 = [number * 2 for number in l1 if number > 2] 

					print(l2)
					
					>>>[6, 8] 
8.Funckcianer,funkciai argumentner@, return

9.Rekursiv funkcianer()

10.tetev nerkayacnenq incha lambda,u funkciayi parametrer(default, args*, kwargs**)


===================================================================================================================================================
								Modulner




11.inch en modulner@,modulneri karevorutyun@ pythoni hamar





===================================================================================================================================================
								Exceptions

12.inch en exceptionner@ u vortex en ogtagorcvum(default exceptionner)


===================================================================================================================================================
								Advanced Pyton

13.Tesaneliutyan makardakner@
14.Generatorner
15.Funkcional cragravorman hamar gorciqner(map,reduce,filter....)


===================================================================================================================================================
								OOP ?

class Test:
    __getattribute(self,value):
        self.y = value


x = Test()

x.z = 6